type User @entity{
   id: ID!
   mintedLinear: BigInt!
   unstakedLinear: BigInt!
   stakedNear: BigInt!
   unstakeReceivedNear: BigInt!
   firstStakingTime: BigInt!
   transferedOut: [FtTransfer!]
   transferedIn: [FtTransfer!]
   transferedInValue: BigDecimal!
   transferedOutValue: BigDecimal!
   transferedInShares: BigInt!
   transferedOutShares: BigInt!
   feesPaid: BigInt!
}

type FtTransfer @entity {
    id: ID!
    to: User!
    from: User!
    timestamp: String!
    price: BigDecimal!
    amount: BigInt!
}

type Price @entity{
   id: ID!
   timeStamp: BigInt!
   method: String!
   event: String!
   receiptHash: String!
   deltaLinearAmount: BigDecimal!
   deltaNearAmount: BigDecimal!
   totalLinearAmount: BigDecimal!
   totalNearAmount: BigDecimal!
   price: BigDecimal!
}

type PriceVersion @entity{
    id: ID!
    lastPriceID: BigInt!
    nextPriceID: BigInt!
    latestPrice: BigDecimal!
}

type TotalSwapFee @entity{
    id: ID!
    timestamp: String!
    feesPaid: BigInt!
}

type Version @entity {
    id: ID!
    version: Int!
}